name: Spring App Docker deploy Pipeline

on:
  push:
    branches: main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582

      - name: Grant execute permission for gradlew
        run: chmod +x task/taskapp/gradlew

      - name: Build with Gradle
        working-directory: task/taskapp
        run: ./gradlew clean build -x test

      - name: Prepare deployment package
        run: |
          mkdir -p deploy
          cp task/taskapp/build/libs/*.jar deploy/app.jar
          cp task/taskapp/Dockerfile deploy/
          cp task/taskapp/docker-compose.yml deploy/
          cat > deploy/deploy.sh << 'EOL'
          #!/bin/bash
          set -e
          docker-compose down || true
          docker-compose up --build -d
          docker-compose logs -f --tail=100
          EOL
          chmod +x deploy/deploy.sh

      - name: Upload deployment package
        uses: actions/upload-artifact@v4
        with:
          name: deploy-package
          path: deploy/

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download deployment package
        uses: actions/download-artifact@v4
        with:
          name: deploy-package

      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      - name: Transfer files to EC2
        run: |
          ssh -i ~/.ssh/id_rsa ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} 'mkdir -p ~/app'
          scp -i ~/.ssh/id_rsa * ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:~/app/

      - name: Deploy on EC2
        run: |
          ssh -i ~/.ssh/id_rsa ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} '
            cd ~/app
            chmod +x deploy.sh
            ./deploy.sh
          '